<launch>
   <node name="SNN" pkg="ros_snn" type="SNN.py" output="screen" respawn="false" required="true">
    <param name="path" value="/home/pi/ros_catkin_ws/src/ros_snn/snn/"/>     <!-- path where the trained SNN is saved -->   
    <param name="SNNname" value="stringtest"/> 			    <!-- Name of the SNN -->
    <param name="verbose" type="bool" value="True"/>		<!-- Will display process if True -->	
    <param name="xml" value="snn_stringtest.xml"/> 			    <!-- Name of the xml file -->
  </node>
 
  
  <!-- Remapping topics for sensory (input) neurons.  Quantity must match "sensory_neurons" parameter -->
  <node name="input_converter" pkg="ros_snn" type="input_converter.py" output="screen" respawn="false" required="true">
    <param name="SNNname" value="stringtest"/> 			        <!-- Name of the SNN -->    
    <param name="verbose" type="bool" value="True"/>		    <!-- Will display process if True -->
    <param name="topics_to_convert" type="int" value="1"/>		    <!-- Number of sensory neurons -->    
    <param name="path" value="/home/pi/ros_catkin_ws/src/ros_snn/snn/"/>     <!-- path where the trained SNN is saved -->  

    <param name="input_topic_1" value="/strcommand"/>			        <!-- Topic containing the value of the input neuron -->  
    <param name="topic_type_1" value="String"/>        <!-- Topic containing the type of the input neuron topic 1-->  
    <param name="input_field_1" value=".data"/>			<!-- Field of the topic containing the value of the input neuron -->      
    <param name="input_min_1" value="-1.0"/>		<!-- Minimum value of the MinMax function -->      
    <param name="input_max_1" value="1.0"/>		<!-- Minimum value of the MinMax function -->  
    <param name="stringfile_1" value="string2snn.csv"/>		<!-- Definition of the strings (if defined) --> 


  </node>
  <!--   <remap from="/joy" to="/topic_joytest"> -->  
</launch>
