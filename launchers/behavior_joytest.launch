<launch>
   <node name="SNN" pkg="ros_snn" type="SNN.py" output="screen" respawn="false" required="true">
    <param name="path" value="/home/pi/ros_catkin_ws/src/ros_snn/snn/"/>     <!-- path where the trained SNN is saved -->   
    <param name="SNNname" value="joytest"/> 			    <!-- Name of the SNN -->
    <param name="verbose" type="bool" value="True"/>		<!-- Will display process if True -->	
    <param name="xml" value=""/> 			    <!-- Name of the xml file -->
    <param name="sensory_neurons" type="int" value="4"/>	<!-- Number of sensory neurons -->
    <param name="motor_neurons" type="int" value="4"/>		<!-- Number of motor neurons -->
    <param name="inter_neurons" type="int" value="0"/>	    <!-- Number of inter neurons -->
    <param name="inter_layers" type="int" value="0"/>	    <!-- Number of layers of inter neurons -->
    <param name="synapse_weight" value="1.0"/>	            <!-- Synapse weight value -->
    <param name="synapse_delay" type="int" value="50"/>      <!-- Synapse delay value -->
    <param name="synapse_condition" value="i==j"/>	        <!-- Synapse connexion condition -->
    <param name="input_drive_current" value="1.0"/>	        <!-- Input drive current -->
    <param name="tau" type="int" value="10"/>			    <!-- Tau constant -->
    <param name="threshold" value="v>0.8"/>			        <!-- The spike threshold  -->
    <param name="reset" value="v = 0"/>			            <!-- The reset value after a spike  -->
    <param name="refractory" type="int" value="5"/> 	    <!-- The refractory time -->
    <param name="simulation_lenght" type="int" value="30"/> <!-- The simlation lenght -->  
  </node>
 
  
  <!-- Remapping topics for sensory (input) neurons.  Quantity must match "sensory_neurons" parameter -->
  <node name="input_converter" pkg="ros_snn" type="input_converter.py" output="screen" respawn="false" required="true">
    <param name="SNNname" value="joytest"/> 			        <!-- Name of the SNN -->    
    <param name="verbose" type="bool" value="True"/>		    <!-- Will display process if True -->
    <param name="topics_to_convert" type="int" value="4"/>		    <!-- Number of sensory neurons -->    
    <param name="input_topic_1" value="/joy"/>			        <!-- Topic containing the value of the input neuron -->  
    <param name="topic_type_1" value="Joy"/>        <!-- Topic containing the type of the input neuron topic 1-->  
    <param name="input_field_1" value=".axes[1]"/>		<!-- Field of the topic containing the value of the input neuron -->      
    <param name="input_topic_2" value="/joy"/>			        <!-- Topic containing the value of the input neuron -->  
    <param name="topic_type_2" value="Joy"/>        <!-- Topic containing the type of the input neuron topic 1-->  
    <param name="input_field_2" value=".axes[0]"/>			<!-- Field of the topic containing the value of the input neuron -->      
    <param name="input_topic_3" value="/joy"/>			        <!-- Topic containing the value of the input neuron -->  
    <param name="topic_type_3" value="Joy"/>        <!-- Topic containing the type of the input neuron topic 1-->  
    <param name="input_field_3" value=".axes[4]"/>			<!-- Field of the topic containing the value of the input neuron -->      
    <param name="input_topic_4" value="/joy"/>			        <!-- Topic containing the value of the input neuron -->  
    <param name="topic_type_4" value="Joy"/>        <!-- Topic containing the type of the input neuron topic 1-->  
    <param name="input_field_4" value=".axes[3]"/>			<!-- Field of the topic containing the value of the input neuron -->      

  </node>
  <!--   <remap from="/joy" to="/topic_joytest"> -->  
</launch>
